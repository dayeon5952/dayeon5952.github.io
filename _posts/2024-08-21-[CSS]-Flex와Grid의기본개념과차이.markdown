---
title: "[CSS] Flex와 Grid의 기본 개념과 차이"
date: 2024-08-21 22:58:22 +09:00
categories: [CSS]
tags: [CSS, Flex, Grid, Flex와 Grid 차이점]
---

Flex와 Grid는 모두 CSS(Cascading Style Sheets)의 일부로서, 웹 개발에서 레이아웃을 조작하는데 사용되는 도구이다. 하지만 두 기술은 목적과 사용 사례에 따라 다르게 적용된다.

## **Flex**

### **정의**

Flexbox는 한 축(행 또는 열)을 기반으로 요소를 정렬하고 배치하기 위한 레이아웃 모델이다. 주로 단일 차원(행 또는 열)에서 유연한 레이아웃을 구현하는 데 사용된다.

### **특징**

1. **단일 차원** : 주로 한 방향(행 또는 열)으로 레이아웃을 구성한다.
2. **유연한 박스 모델** : 요소 간에 유연한 공간 분배를 통해 동적인 레이아웃을 생성한다.
3. **요소 정렬 및 간격** : 주축 및 교차축에서 요소를 정렬하고 간격을 조절하는 데 유용하다.
4. **간단한 구조** : 작은 규모의 레이아웃을 간편하게 구현할 수 있다.

#### **적합한 레이아웃**

Flex는 주로 동일한 방향으로 정렬된 요소를 가진 작은 규모의 레이아웃에 적합하다. 예를 들어, 내비게이션 바나 작은 아이템 목록을 정렬하는 데 유용하다.

## **Grid**

### **정의**

Grid는 행과 열의 2차원 그리드를 사용하여 복잡한 레이아웃을 만들기 위한 레이아웃 시스템이다. Flex와 달리 2차원 레이아웃을 제공하여 더 복잡하고 다양한 디자인을 구현할 수 있다.

### **특징**

1. **2차원 레이아웃** : 행과 열을 사용하여 요소를 배치하는 데 유용하다.
2. **복잡한 구조** : 다양한 디자인 및 복잡한 레이아웃을 구현할 수 있다.
3. **영역 지정** : 각 요소에 대한 정확한 위치와 크기를 설정할 수 있다.
4. **Responsiveness** : 반응형 웹 디자인에 적합하며 다양한 디바이스에 대응할 수 있다.

#### **적합한 레이아웃**

Grid는 주로 복잡하고 다양한 레이아웃을 필요로 하는 경우에 적합하다. 큰 규모의 웹 페이지나 앱의 전체적인 구조를 설계할 때 효과적으로 사용된다.

## **Flex와 Grid 비교**

#### **차원**
- Flex는 단일 차원(행 또는 열)에서 작동하며, 요소를 해당 차원에 따라 배치한다.
- Grid는 2차원(행과 열) 레이아웃을 제공하며, 요소를 행과 열 양쪽으로 정렬할 수 있다.

#### **복잡성**
- Flex는 간단하고 작은 레이아웃에 적합하며, 주로 요소 간의 정렬에 중점을 둔다.
- Grid는 복잡하고 다양한 디자인을 위해 사용되며, 정확한 위치 및 크기를 설정할 수 있는 능력이 강조된다.

#### **구조**
- Flex는 주로 유연한 공간 분배와 정렬에 중점을 두는 간단한 구조를 가진다.
- Grid는 영역을 명확하게 지정하고 배치하는 데 중점을 둔 복잡한 구조를 가진다.
